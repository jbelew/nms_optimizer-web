[supervisord]
nodaemon=true
logfile=/var/log/supervisor/supervisord.log
pidfile=/var/run/supervisor/supervisord.pid
user=root

[program:nginx]
command=/usr/sbin/nginx -g "daemon off;"
autostart=true
autorestart=true
priority=10
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
user=root ; Nginx master process runs as root, workers as www-data

[program:backend_service]
; Command to run Gunicorn. 'app:app' means: in 'app.py' (or the main module of your Flask app), find the WSGI callable named 'app'.
; Adjust 'app:app' if your Flask app instance is named differently or in a different file.
; Reduced workers to 1 for easier debugging, added verbose logging to stdout/stderr.
command=/usr/local/bin/gunicorn --workers 1 --bind 0.0.0.0:5016 --log-level=debug --access-logfile=- --error-logfile=- app:app
directory=/opt/app/backend_app
autostart=true
autorestart=true
priority=20
user=appuser ; Run Gunicorn as the non-root 'appuser'
environment=PYTHONUNBUFFERED="1"
; Forward Gunicorn's stdout/stderr to Supervisor's stdout/stderr so it appears in `docker logs`
stdout_logfile=/dev/stdout
stdout_logfile_maxbytes=0
stderr_logfile=/dev/stderr
stderr_logfile_maxbytes=0
